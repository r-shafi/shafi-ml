{"expireTime":9007200863204998000,"key":"transformer-remark-markdown-html-32849b0c0421efd9e7972b5ee01ed1b4-gatsby-remark-highlight-code-","val":"<blockquote>\n<p><code>Intl.RelativeTimeFormat</code> enables localized formatting of relative times without sacrificing performance.</p>\n</blockquote>\n<p>We've all seen websites using <strong>Just now</strong>, <strong>an hour ago</strong>, <strong>a week ago</strong> etc. to describe when the post was created.\nAlmost all of these websites uses popular libraries like <em>Moment.js</em>, <em>Globalize</em>, <em>date</em>fns_ and-all to use this feature.</p>\n<p>Today we'd look at how we can do that with just Vanilla JavaScript!</p>\n<h2>A Quick Example</h2>\n<p>Just to show you how the <code>Intl.RelativeTimeFormat</code> constructor works</p>\n<deckgo-highlight-code language=\"javascript\"  theme=\"blackboard\" >\n          <code slot=\"code\">const when = new Intl.RelativeTimeFormat(&#39;en&#39;).format(-1, &#39;day&#39;);\nconsole.log(when);\n// &quot;1 day ago&quot;</code>\n        </deckgo-highlight-code>\n<p>Here we passed the <code>Intl.RelativeTimeFormat</code> an argument, a string with a <strong>BCP 47 language tag</strong>. This argument decides the output language.</p>\n<p>Additionally, the <code>Intl.RelativeTimeFormat</code> constructor accepts an optional <code>options</code> argument, which gives us more control over the output. We'd talk about it later in this tutorial.</p>\n<p>Then we told the <code>Intl.RelativeTimeFormat</code> constructor to format the relative time (the -1 value) in <code>day</code> unit.</p>\n<p>Lets tweak this code a bit (copy this and check the code in your console)</p>\n<deckgo-highlight-code language=\"javascript\"  theme=\"blackboard\" >\n          <code slot=\"code\">const when = new Intl.RelativeTimeFormat(&#39;bn&#39;).format(-5, &#39;day&#39;);\nconsole.log(when);\n// &quot;৫ দিন আগে&quot; (translation: 5 days ago)</code>\n        </deckgo-highlight-code>\n<p>And of course we can set times in future as well</p>\n<deckgo-highlight-code language=\"javascript\"  theme=\"blackboard\" >\n          <code slot=\"code\">const when = new Intl.RelativeTimeFormat(&#39;en&#39;).format(2, &#39;day&#39;);\nconsole.log(when);\n// in 2 days</code>\n        </deckgo-highlight-code>\n<h3>The <code>options</code> Object</h3>\n<p>The <code>options</code> object gives us more control over the output. It have three possible values:</p>\n<ul>\n<li>localeMatcher</li>\n<li>numeric</li>\n<li>style</li>\n</ul>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/RelativeTimeFormat\">Read about the options in details here</a></p>\n<deckgo-highlight-code language=\"javascript\"  theme=\"blackboard\" >\n          <code slot=\"code\">const options = {\n  numeric: &#39;auto&#39;,\n};\n\nconst when = new Intl.RelativeTimeFormat(&#39;en&#39;, options).format(-1, &#39;day&#39;);\n\nconsole.log(when);\n// yesterday</code>\n        </deckgo-highlight-code>\n<h3>Possible Values for Unit</h3>\n<p>You can pass in the following values in <code>Intl.RelativeTimeFormat(locale).format(relative time, **UNIT**)</code>:</p>\n<ul>\n<li>second</li>\n<li>minute</li>\n<li>hour</li>\n<li>day</li>\n<li>month</li>\n<li>quarter</li>\n<li>year</li>\n</ul>\n<h3>Logically Show When Something Was Created</h3>\n<p>Suppose your post was created at some date</p>\n<deckgo-highlight-code language=\"javascript\"  theme=\"blackboard\" >\n          <code slot=\"code\">const createdAt = new Date(2020, 11, 10); // December 10, 2020</code>\n        </deckgo-highlight-code>\n<p>And I, the user visited your post right now</p>\n<deckgo-highlight-code language=\"javascript\"  theme=\"blackboard\" >\n          <code slot=\"code\">const userVisited = new Date();</code>\n        </deckgo-highlight-code>\n<p>If we subtract <code>createdAt</code> from <code>userVisited</code> we'll get a number in milliseconds</p>\n<deckgo-highlight-code language=\"javascript\"  theme=\"blackboard\" >\n          <code slot=\"code\">const diff = userVisited - createdAt;\n// some value in milliseconds</code>\n        </deckgo-highlight-code>\n<p>Now we need to convert this <code>diff</code> in days</p>\n<deckgo-highlight-code language=\"javascript\"  theme=\"blackboard\" >\n          <code slot=\"code\">const toSec = diff / 1000;\n// convert the milliseconds to seconds\n\nconst toMin = toSec / 60;\n// convert the seconds to minutes\n\nconst toHour = toMin / 60;\n// convert the minutes to hours\n\nconst toDays = toHour / 24;\n// convert the hours to days\n\n// now we&#39;ll round the days up/down\nconst rounded = Math.round(toDays);</code>\n        </deckgo-highlight-code>\n<p>And finally we'll pass the <code>rounded</code> value to <code>Intl.RelativeTimeFormat</code> constructors <code>format</code> method</p>\n<deckgo-highlight-code language=\"javascript\"  theme=\"blackboard\" >\n          <code slot=\"code\">const when = new Intl.RelativeTimeFormat(&#39;en&#39;).format(-rounded, &#39;day&#39;);\n\n// because your post was created in past\n// we pass a minus sign before the rounded\n// to get the output in past tense</code>\n        </deckgo-highlight-code>\n<p>That's it for today, obviously you can make this code a lot more dynamic to show different types of <code>unit</code> based on when the post was created. Try that out on your own.</p>\n<hr>\n<p><a href=\"https://shafi.ml/blog/js-number-format\">Format Number With JavaScript</a></p>\n<p><a href=\"https://shafi.ml/blog/js-date-time-format\">Format Date and Time with JavaScript</a></p>"}