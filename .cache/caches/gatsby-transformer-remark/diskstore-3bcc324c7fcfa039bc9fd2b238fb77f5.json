{"expireTime":9007200863898197000,"key":"transformer-remark-markdown-html-a30d04456949d12e5372eb83764825e2--","val":"<p>The easiest way you can make your websites <code>footer</code> stick to the bottom of the page no matter what the height of your webpage is to use CSS <code>flexbox</code>.</p>\n<p>This is our example <code>HTML</code> webpage's code:</p>\n<pre><code class=\"language-html\">&#x3C;header>\n  &#x3C;h1>HEADER TITLE&#x3C;/h1>\n  &#x3C;h2>Subtitle&#x3C;/h2>\n&#x3C;/header>\n\n&#x3C;div class=\"content\">\n  &#x3C;h1>Content Title&#x3C;/h1>\n  &#x3C;p>\n    Lorem ipsum dolor sit, amet consectetur adipisicing elit. Necessitatibus\n    incidunt explicabo error, maxime reiciendis consectetur sapiente velit\n    perspiciatis, quibusdam enim facere praesentium vitae alias dignissimos\n    debitis impedit sequi, assumenda ipsa.\n  &#x3C;/p>\n&#x3C;/div>\n\n&#x3C;footer>\n  &#x3C;h3>Created By Shafi&#x3C;/h3>\n  &#x3C;p>&#x26;copy; 2020&#x3C;/p>\n&#x3C;/footer>\n</code></pre>\n<p>We've connected our stylesheet with this page and stripped down the default styling by using this CSS Snippet</p>\n<pre><code class=\"language-css\">* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: monospace;\n}\n</code></pre>\n<p>At this moment our webpage looks like this:</p>\n<p><img src=\"https://i.imgur.com/uCyd0CU.png?\"></p>\n<p>To take our <code>footer</code> element to the bottom of the page, we're going to use our <code>body</code> element as a <strong>flex container</strong>. All the children of body will thus turn into individual flex items.</p>\n<pre><code class=\"language-css\">body {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n}\n</code></pre>\n<p>Here, using the <code>display: flex</code> turned our <code>body</code> element into a flex container.</p>\n<blockquote>\n<p>The flex-direction property specifies the direction of the flexible items.\nWe set <code>flex-direction</code>s property as <code>column</code>. Thus all the children of body will flow from top to bottom.</p>\n</blockquote>\n<p>And we set a <code>min-height</code> property on our page so that no matter what the contents length is, the body height will at least equals to the screen size.</p>\n<p>Well, the CSS didn't do much to our webpage, did it?</p>\n<p>Worry not! We'd only need one more line of code to set our footer to the bottom of the screen.</p>\n<pre><code class=\"language-css\">.content {\n  flex: 1;\n}\n</code></pre>\n<blockquote>\n<p>The <code>flex</code> property is a shorthand property for:</p>\n</blockquote>\n<ul>\n<li><code>flex-grow</code></li>\n<li><code>flex-shrink</code></li>\n<li><code>flex-basis</code></li>\n</ul>\n<blockquote>\n<p>The <code>flex</code> property sets the flexible length on flexible items.</p>\n</blockquote>\n<p>This tells our <code>content div</code> to take all the available unused space.</p>\n<p>Our webpage now looks like this!</p>\n<p><img src=\"https://i.imgur.com/EFqQDOT.png?1\"></p>\n<p>Cheers ðŸŽ‰</p>\n<p>Now if we want to center all the contents inside of our <code>content div</code>, we can just turn it into a <strong>flex container</strong> like this</p>\n<pre><code class=\"language-css\">.content {\n  flex: 1;\n  /* CENTER EVERYTHING VERTICALLY */\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n</code></pre>\n<p>And now the end result looks like this</p>\n<p><img src=\"https://i.imgur.com/sxnIYKb.png\"></p>"}