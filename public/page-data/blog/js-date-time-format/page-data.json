{"componentChunkName":"component---src-templates-blog-js","path":"/blog/js-date-time-format","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>The <strong>Intl</strong> object is the namespace for the ECMAScript Internationalization API, which provides language sensitive string comparison, number formatting, and date and time formatting.</p>\n</blockquote>\n<h2>How Can I Format Date and Time in JavaScript?</h2>\n<p>Suppose we have a <code>Date</code> object in a variable called <code>now</code></p>\n<pre class=\"grvsc-container abyss\" data-language=\"javascript\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">const</span><span class=\"mtk1\"> now </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">new</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtku\">Date</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<p>If we log this <code>now</code> variable in the console, we'll see an unformatted string of our location specific current date and time with many unnecessary information being printed out.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"javascript\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">console</span><span class=\"mtk1\">.</span><span class=\"mtk15\">log</span><span class=\"mtk1\">(now);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Sun Dec 13 2020 10:38:06 GMT+0600 (Bangladesh Standard Time)</span></span></span></code></pre>\n<p>We can use the <code>DateTimeFormat</code> constructor of <code>Intl</code> object to quickly format the <code>now</code> Date object for us and return a formatted date string</p>\n<pre class=\"grvsc-container abyss\" data-language=\"javascript\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">const</span><span class=\"mtk1\"> formatDateInBangla </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">new</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtku\">Intl</span><span class=\"mtk1\">.</span><span class=\"mtk5 mtku\">DateTimeFormat</span><span class=\"mtk1\">(</span><span class=\"mtk11\">&#39;bn-BD&#39;</span><span class=\"mtk1\">).</span><span class=\"mtk6\">format</span><span class=\"mtk1\">(now);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">console</span><span class=\"mtk1\">.</span><span class=\"mtk15\">log</span><span class=\"mtk1\">(formatDateInBangla);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// ১৩/১২/২০২০</span></span></span></code></pre>\n<p>The <code>DateTimeFormat</code> constructor can take two <code>parameters</code>; <code>locale</code> or default date formatting for language and an <code>options object</code>. We'll talk about the <code>options object</code> soon.</p>\n<p>We're going to write the same code snippet as last time with a slight change, we're going to set the <code>locale</code> to <code>en-GB</code> or British English instead of <code>bn-BD</code> or Bangla (Bangladesh).</p>\n<pre class=\"grvsc-container abyss\" data-language=\"javascript\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">const</span><span class=\"mtk1\"> formatDateInEnglish </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">new</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtku\">Intl</span><span class=\"mtk1\">.</span><span class=\"mtk5 mtku\">DateTimeFormat</span><span class=\"mtk1\">(</span><span class=\"mtk11\">&#39;en-GB&#39;</span><span class=\"mtk1\">).</span><span class=\"mtk6\">format</span><span class=\"mtk1\">(now);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">console</span><span class=\"mtk1\">.</span><span class=\"mtk15\">log</span><span class=\"mtk1\">(formatDateInEnglish);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 13/12/2020</span></span></span></code></pre>\n<h3>Using the Options Object</h3>\n<p>The <code>options object</code> can take some or all of the following properties <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\">described here.</a></p>\n<p>To keep this tutorial short, we're only going to use <code>dateStyle</code>\nand <code>timeStyle</code> options.</p>\n<h4>Using <code>dateStyle</code></h4>\n<p>The date formatting style has four possible values:</p>\n<ul>\n<li>'full'</li>\n<li>'long'</li>\n<li>'medium'</li>\n<li>'short'</li>\n</ul>\n<p>This time we're going to pass an <code>option object</code> with <code>dateStyle</code> as a key and <code>'full'</code> as its value.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"javascript\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">const</span><span class=\"mtk1\"> option </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  dateStyle: </span><span class=\"mtk11\">&#39;full&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">};</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">const</span><span class=\"mtk1\"> formatDate </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">new</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtku\">Intl</span><span class=\"mtk1\">.</span><span class=\"mtk5 mtku\">DateTimeFormat</span><span class=\"mtk1\">(</span><span class=\"mtk11\">&#39;en-GB&#39;</span><span class=\"mtk1\">, option).</span><span class=\"mtk6\">format</span><span class=\"mtk1\">(now);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">console</span><span class=\"mtk1\">.</span><span class=\"mtk15\">log</span><span class=\"mtk1\">(formatDate);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Sunday, 13 December 2020</span></span></span></code></pre>\n<p>Remember when we talked about the <code>DateTimeFormat</code> constructors ability to take in two arguments? Well, look closely, we've passed in the <code>option object</code> we created.\nThat <code>option object</code> is telling the constructor to format the <code>now</code> date object in full form in British standard (passed in as locale).</p>\n<p>Cool! Now it's time for you to test out the other three values of the <code>dateStyle</code> and see what they returns!</p>\n<h4>Using <code>timeStyle</code></h4>\n<p>The time formatting style have the same four possible values as the <code>dateStyle</code> property.</p>\n<p>Our <code>now</code> variable, which is a date object, contains information about the <em>time</em> it was created at.\nThis time we're going to format the <code>now</code> variable using the <code>timeStyle</code> property as the <strong>only</strong> option and see what it returns to us.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"javascript\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">const</span><span class=\"mtk1\"> formatTime </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">new</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtku\">Intl</span><span class=\"mtk1\">.</span><span class=\"mtk5 mtku\">DateTimeFormat</span><span class=\"mtk1\">(</span><span class=\"mtk11\">&#39;en-GB&#39;</span><span class=\"mtk1\">, {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  timeStyle: </span><span class=\"mtk11\">&#39;short&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}).</span><span class=\"mtk6\">format</span><span class=\"mtk1\">(now);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// You can pass in the option object inline!</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">console</span><span class=\"mtk1\">.</span><span class=\"mtk15\">log</span><span class=\"mtk1\">(formatTime);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 11:38</span></span></span></code></pre>\n<p>Well, that's not so pretty, is it? Is it day or night?</p>\n<p>Let's try something else.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"javascript\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">const</span><span class=\"mtk1\"> options </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  timeStyle: </span><span class=\"mtk11\">&#39;short&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  hour12: </span><span class=\"mtk4\">true</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">};</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Obviously you can pass multiple options</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">const</span><span class=\"mtk1\"> formatTimeNotUgly </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">new</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtku\">Intl</span><span class=\"mtk1\">.</span><span class=\"mtk5 mtku\">DateTimeFormat</span><span class=\"mtk1\">(</span><span class=\"mtk11\">&#39;en-GB&#39;</span><span class=\"mtk1\">, options).</span><span class=\"mtk6\">format</span><span class=\"mtk1\">(now);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">console</span><span class=\"mtk1\">.</span><span class=\"mtk15\">log</span><span class=\"mtk1\">(formatTimeNotUgly);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 11:43 am</span></span></span></code></pre>\n<p>I hope you now understand how the <code>Intl.DateTimeFormat</code> constructor works. <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\">Please read this MDN Documentation for an in depth understanding of Intl.DateTimeFormat.</a></p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .abyss { background-color: #000c18; }\n  .abyss .mtku {\n    text-decoration: underline;\n    text-underline-position: under;\n  }\n  .abyss .mtki { font-style: italic; }\n  .abyss .mtk15 { color: #9966B8; }\n  .abyss .mtk1 { color: #6688CC; }\n  .abyss .mtk7 { color: #225588; }\n  .abyss .mtk5 { color: #FFEEBB; }\n  .abyss .mtk3 { color: #384887; }\n  .abyss .mtk11 { color: #22AA44; }\n  .abyss .mtk6 { color: #DDBB88; }\n  .abyss .mtk4 { color: #F280D0; }\n  .abyss .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","frontmatter":{"date":"December 13, 2020","slug":"/blog/js-date-time-format","title":"Format Date and Time with JavaScript"}}},"pageContext":{"slug":"/blog/js-date-time-format"}},"staticQueryHashes":[]}