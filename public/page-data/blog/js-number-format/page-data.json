{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog/js-number-format","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>The <code>Intl.NumberFormat()</code> constructor creates objects that enable language sensitive number formatting.</p>\n</blockquote>\n<p>Suppose we have to print out a number to our users display, we store that number in a variable and put it in the <code>DOM</code> in the most convenient method for us.</p>\n<pre class=\"grvsc-container monokai\" data-language=\"javascript\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> numberToDisplay </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">1000000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Show it to the user</span></span></span></code></pre>\n<p>But when we show it to the user, the number gets printed out exactly as it was created, with no formatting. Let's check out what the user sees.</p>\n<pre class=\"grvsc-container monokai\" data-language=\"javascript\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">console</span><span class=\"mtk1\">.</span><span class=\"mtk9\">log</span><span class=\"mtk1\">(numberToDisplay);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 1000000</span></span></span></code></pre>\n<p>It's sort of a trouble for the user to decipher the exact value of the output, especially if the output is a big number.</p>\n<p>We want our users to get the best experience in the web when they are using our site, but little inconveniences like this becomes the greatest obstacle in giving them the best experience.</p>\n<h2>How can we fix this?</h2>\n<p>The easiest way to format any <code>number</code> is to use the <code>Intl.NumberFormat</code> constructor. The constructor takes in two arguments; <code>locale</code>, a string with a BCP 47 language tag and an <code>options</code> object.</p>\n<p>Lets see this in action.</p>\n<pre class=\"grvsc-container monokai\" data-language=\"javascript\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> num </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">10000000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> formatNum </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">Intl</span><span class=\"mtk1\">.</span><span class=\"mtk5\">NumberFormat</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&#39;en-US&#39;</span><span class=\"mtk1\">).</span><span class=\"mtk5\">format</span><span class=\"mtk1\">(num);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// This time we&#39;re only passing the `locale` parameter</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">console</span><span class=\"mtk1\">.</span><span class=\"mtk9\">log</span><span class=\"mtk1\">(formatNum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 10,000,000</span></span></span></code></pre>\n<p>We haven't done much, but the number output is already more easier to read.</p>\n<p>We can also print out the number in any language we want by changing the <code>locale</code> argument.</p>\n<pre class=\"grvsc-container monokai\" data-language=\"javascript\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> num </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">10000000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> formatNumInBangla </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">Intl</span><span class=\"mtk1\">.</span><span class=\"mtk5\">NumberFormat</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&#39;bn-BD&#39;</span><span class=\"mtk1\">).</span><span class=\"mtk5\">format</span><span class=\"mtk1\">(num);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">console</span><span class=\"mtk1\">.</span><span class=\"mtk9\">log</span><span class=\"mtk1\">(formatNumInBangla);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// ১,০০,০০,০০০</span></span></span></code></pre>\n<p>To print out the number in your language <a href=\"https://www.currency-iso.org/en/home/tables/table-a1.html\">find out the BCP 47 language tag for your language.</a></p>\n<h3>Advanced Formatting with <code>Options Object</code></h3>\n<p>The <code>Option Object</code> can contain some or all of the properties listed <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat\">in this page.</a></p>\n<p>To keep this tutorial short, we're going to use few of the most common properties of the <code>Option Object</code>.</p>\n<h4>Property: <code>style</code> and <code>currency</code></h4>\n<p><code>style</code> property defines the formatting style to use, it has four possible values:</p>\n<ul>\n<li>decimal</li>\n<li>currency</li>\n<li>percent</li>\n<li>unit</li>\n</ul>\n<p>We're going to use the <code>currency</code> <em>value</em> (<strong>NOT THE PROPERTY</strong>), but using the <code>style</code> property with the value <code>currency</code> as the only option will lead to an error.</p>\n<pre class=\"grvsc-container monokai\" data-language=\"javascript\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> optionsObject </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  style: </span><span class=\"mtk6\">&#39;currency&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">};</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> formatSomeNum </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">Intl</span><span class=\"mtk1\">.</span><span class=\"mtk5\">NumberFormat</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&#39;en-US&#39;</span><span class=\"mtk1\">, optionsObject).</span><span class=\"mtk5\">format</span><span class=\"mtk1\">(</span><span class=\"mtk4\">1000</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">console</span><span class=\"mtk1\">.</span><span class=\"mtk9\">log</span><span class=\"mtk1\">(formatSomeNum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Uncaught TypeError: Currency code is required with currency style.</span></span></span></code></pre>\n<p>We'll have to pass a second option <code>currency</code> with a <strong>ISO 4217 currency code</strong>.</p>\n<pre class=\"grvsc-container monokai\" data-language=\"javascript\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> num </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">1000000000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> formatInUSD </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">Intl</span><span class=\"mtk1\">.</span><span class=\"mtk5\">NumberFormat</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&#39;en-US&#39;</span><span class=\"mtk1\">, {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  style: </span><span class=\"mtk6\">&#39;currency&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  currency: </span><span class=\"mtk6\">&#39;USD&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}).</span><span class=\"mtk5\">format</span><span class=\"mtk1\">(num);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">console</span><span class=\"mtk1\">.</span><span class=\"mtk9\">log</span><span class=\"mtk1\">(formatInUSD);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// $1,000,000,000.00</span></span></span></code></pre>\n<p>Remember, we can print out the number in any language we want.</p>\n<pre class=\"grvsc-container monokai\" data-language=\"javascript\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> num </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">1000000000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> formatInBDT </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">Intl</span><span class=\"mtk1\">.</span><span class=\"mtk5\">NumberFormat</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&#39;bn-BD&#39;</span><span class=\"mtk1\">, {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  style: </span><span class=\"mtk6\">&#39;currency&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  currency: </span><span class=\"mtk6\">&#39;BDT&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}).</span><span class=\"mtk5\">format</span><span class=\"mtk1\">(num);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">console</span><span class=\"mtk1\">.</span><span class=\"mtk9\">log</span><span class=\"mtk1\">(formatInBDT);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// ১,০০,০০,০০,০০০.০০৳</span></span></span></code></pre>\n<h4>Property: <code>notation</code></h4>\n<p><code>notation</code> property has four possible values:</p>\n<ul>\n<li>standard</li>\n<li>scientific</li>\n<li>compact</li>\n<li>engineering</li>\n</ul>\n<p>We're going to use the <code>compact</code> value in this example.</p>\n<pre class=\"grvsc-container monokai\" data-language=\"javascript\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> someNum </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">20000000000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">const</span><span class=\"mtk1\"> formatNum </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">Intl</span><span class=\"mtk1\">.</span><span class=\"mtk5\">NumberFormat</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&#39;en-US&#39;</span><span class=\"mtk1\">, { notation: </span><span class=\"mtk6\">&#39;compact&#39;</span><span class=\"mtk1\"> }).</span><span class=\"mtk5\">format</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  someNum</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">console</span><span class=\"mtk1\">.</span><span class=\"mtk9\">log</span><span class=\"mtk1\">(fomatNum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 20B</span></span></span></code></pre>\n<p>This is it for today, remember to check out the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat\">MDN Documentation about NumberFormat for many more awesome options and their usages.</a></p>\n<hr>\n<p><a href=\"https://shafi.ml/blog/js-date-time-format\">Format Date and Time with JavaScript</a></p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .monokai {\n    background-color: #272822;\n    color: #f8f8f2;\n  }\n  .monokai .mtki { font-style: italic; }\n  .monokai .mtk9 { color: #66D9EF; }\n  .monokai .mtk1 { color: #F8F8F2; }\n  .monokai .mtk7 { color: #F92672; }\n  .monokai .mtk4 { color: #AE81FF; }\n  .monokai .mtk3 { color: #75715E; }\n  .monokai .mtk5 { color: #A6E22E; }\n  .monokai .mtk6 { color: #E6DB74; }\n  .monokai .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","frontmatter":{"date":"December 14, 2020","slug":"/blog/js-number-format","title":"Format Number with JavaScript","info":"The Intl.NumberFormat() constructor creates objects that enable language sensitive number formatting."}}},"pageContext":{"slug":"/blog/js-number-format"}},"staticQueryHashes":[]}